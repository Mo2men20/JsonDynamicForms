{
    "formName":"Employee Information",
    "fields": [
        {
            "type": "text",
            "specificType":"text",
            "name": "name",
            "displayName":"Full name",
            "validators": [
                {
                    "type": "required",
                    "errorMessage": "This field is required."
                },
                {
                    "type": "pattern",
                    "errorMessage": "invalid text",
                    "value": "[0-9a-zA-Z]{2,}"
                }
            ]
        },
        {
            "type": "text",
            "specificType":"date",
            "name": "date",
            "displayName":"Date of birth",
            "validators": [
                {
                    "type": "required",
                    "errorMessage": "This field is required."
                },
                {
                    "type":"before",
                    "errorMessage":"Date of birth must be before 2021",
                    "value":"2021-01-01"
                },
                {
                    "type":"after",
                    "errorMessage":"this field must be after 1900",
                    "value":"1900-01-01"
                }
            ]
        },
        {
            "type": "text",
            "specificType":"date",
            "name": "date2",
            "displayName":"Graduation year",
            "validators": [
                {
                    "type": "required",
                    "errorMessage": "This field is required."
                },
                {
                    "type":"afterDateInForm",
                    "errorMessage":"This field must be after date of birth",
                    "secondControlName":"date"
                }
            ]
        },
        {
            "type": "text",
            "specificType":"number",
            "name": "name2",
            "displayName":"Salary",
            "validators": [
                {
                    "type": "required",
                    "errorMessage": "This field is required."
                },
                {
                    "type": "min",
                    "value":0,
                    "errorMessage": "value must be greater than 0"
                },
                {
                    "type": "maxLength",
                    "value":5,
                    "errorMessage": "maximum length is 5"
                }
            ]
        },
        {
            "type": "select",
            "name": "genderId",
            "displayName":"Gender",
            "validators": [
                {
                    "type": "required",
                    "errorMessage": "This field is required."
                }
            ],
            "options": [
                {
                    "value": 1,
                    "name": "Male"
                },
                {
                    "value": 2,
                    "name": "Female"
                }
            ],
            "mapper": {
                "arguments": "options",
                "body": "const arr=[]; options.forEach(option=>{arr.push({'value':option.id,'name':option.title})});return arr.slice(0,6);"
            },
            "fetch": false,
            "api": "https://jsonplaceholder.typicode.com/posts"
        },
        {
            "type": "radio",
            "name": "communicationWayId",
            "displayName":"Prefered communication method",
            "validators": [
                {
                    "type": "required",
                    "errorMessage": "This field is required."
                }
            ],
            "options": [
                {
                    "value": 1,
                    "name": "Mobile"
                },
                {
                    "value": 2,
                    "name": "Email"
                }
            ],
            "mapper": {
                "arguments": "options",
                "body": "const arr=[]; options.forEach(option=>{arr.push({'value':option.id,'name':option.title})});return arr.slice(0,6);"
            },
            "fetch": false,
            "api": "https://jsonplaceholder.typicode.com/posts"
        },
        {
            "type": "checkbox",
            "name": "favouriteAnimals",
            "displayName":"Favourite Animals",
            "validators": [
                {
                    "type": "atLeastOne",
                    "errorMessage": "at least one checkbox is required"
                }
            ],
            "options": [
                {
                    "value": 10,
                    "name": "Dogs"
                },
                {
                    "value": 20,
                    "name": "Cats"
                }
            ],
            "mapper": {
                "arguments": "options",
                "body": "const arr=[]; options.forEach(option=>{arr.push({'value':option.id,'name':option.title})});return arr.slice(0,6);"
            },
            "fetch": false,
            "api": "https://jsonplaceholder.typicode.com/posts"
        }
    ]
}